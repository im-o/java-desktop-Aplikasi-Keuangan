import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class saldoAwal extends javax.swing.JInternalFrame {
    private Connection connection;
    DefaultTableModel tableModel;
    String varJnsSaldoS="";
    
    int kasKeBBesar;
    int modalSahamBB;
    int labaDitahanBB;
    int perlengakapanBB;
    public saldoAwal() {
        initComponents();
        jComboBoxAct();
        initTable();
        loadDataSaldo();
        System.out.println("sall : "+varJnsSaldoS);
        
        kasBBesar();
        modalSahamBBesar();
        labaDitahanBBesar();
        PerlengakapanBBesar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSaldo = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButtonTambahAkun = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldKodeAkunA = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldNamaAKunA = new javax.swing.JTextField();
        jComboBoxAkun = new javax.swing.JComboBox<>();
        jButtonTambahAkunA = new javax.swing.JButton();
        jButtonHapusA = new javax.swing.JButton();
        jButtonHapusAkun = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxJenisSaldo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonTambahSaldo = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerSaldo = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jButtonSimpanS = new javax.swing.JButton();
        jButtonEditS = new javax.swing.JButton();
        jButtonHapusS = new javax.swing.JButton();
        jComboBoxAkunSaldo = new javax.swing.JComboBox<>();
        jButtonReset = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Saldo Awal");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTableSaldo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSaldo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSaldoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSaldo);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonTambahAkun.setText("Tambah Akun");
        jButtonTambahAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahAkunActionPerformed(evt);
            }
        });

        jLabel8.setText("Kode Akun           :");

        jTextFieldKodeAkunA.setEnabled(false);
        jTextFieldKodeAkunA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKodeAkunAActionPerformed(evt);
            }
        });

        jLabel9.setText("Nama Akun          :");

        jTextFieldNamaAKunA.setEnabled(false);

        jComboBoxAkun.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih -" }));
        jComboBoxAkun.setEnabled(false);

        jButtonTambahAkunA.setText("Tambah");
        jButtonTambahAkunA.setEnabled(false);
        jButtonTambahAkunA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahAkunAActionPerformed(evt);
            }
        });

        jButtonHapusA.setText("Hapus");
        jButtonHapusA.setEnabled(false);
        jButtonHapusA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusAActionPerformed(evt);
            }
        });

        jButtonHapusAkun.setText("Hapus Akun");
        jButtonHapusAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusAkunActionPerformed(evt);
            }
        });

        jLabel2.setText("Pilih Jenis Akun :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButtonTambahAkun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                                .addComponent(jButtonHapusAkun, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNamaAKunA)
                            .addComponent(jTextFieldKodeAkunA))
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator3)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonTambahAkunA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxAkun, 0, 99, Short.MAX_VALUE)
                            .addComponent(jButtonHapusA, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahAkun)
                    .addComponent(jButtonHapusAkun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldKodeAkunA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNamaAKunA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jButtonTambahAkunA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxAkun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonHapusA)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Pilih Jenis Akun  :");

        jComboBoxJenisSaldo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Jenis -", "1. Debet", "2. Kredit" }));
        jComboBoxJenisSaldo.setEnabled(false);

        jLabel7.setText("Jenis Saldo        :");

        jButtonTambahSaldo.setText("Tambah Saldo");
        jButtonTambahSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahSaldoActionPerformed(evt);
            }
        });

        jLabel10.setText("Saldo                 :");

        jSpinnerSaldo.setEnabled(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonSimpanS.setText("Simpan");
        jButtonSimpanS.setEnabled(false);
        jButtonSimpanS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanSActionPerformed(evt);
            }
        });

        jButtonEditS.setText("Update");
        jButtonEditS.setEnabled(false);
        jButtonEditS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditSActionPerformed(evt);
            }
        });

        jButtonHapusS.setText("Hapus");
        jButtonHapusS.setEnabled(false);
        jButtonHapusS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButtonSimpanS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEditS, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonHapusS, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonEditS, jButtonHapusS, jButtonSimpanS});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonSimpanS)
                .addComponent(jButtonEditS)
                .addComponent(jButtonHapusS))
        );

        jComboBoxAkunSaldo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih -" }));
        jComboBoxAkunSaldo.setEnabled(false);
        jComboBoxAkunSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAkunSaldoActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(36, 36, 36)
                                .addComponent(jComboBoxAkunSaldo, 0, 123, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerSaldo)
                                    .addComponent(jComboBoxJenisSaldo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonTambahSaldo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonReset)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTambahSaldo)
                    .addComponent(jButtonReset))
                .addGap(4, 4, 4)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxAkunSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jSpinnerSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxJenisSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldKodeAkunAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKodeAkunAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldKodeAkunAActionPerformed

    private void jButtonTambahAkunAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahAkunAActionPerformed
        saveDataA();
    }//GEN-LAST:event_jButtonTambahAkunAActionPerformed

    private void jButtonSimpanSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanSActionPerformed
        saveDataS();
    }//GEN-LAST:event_jButtonSimpanSActionPerformed

    private void jComboBoxAkunSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAkunSaldoActionPerformed
        jCmb();
    }//GEN-LAST:event_jComboBoxAkunSaldoActionPerformed

    private void jButtonEditSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditSActionPerformed
        saldoEdit();
    }//GEN-LAST:event_jButtonEditSActionPerformed

    private void jTableSaldoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSaldoMouseClicked
        tableClicked();
    }//GEN-LAST:event_jTableSaldoMouseClicked

    private void jButtonHapusSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusSActionPerformed
        btnHapusS();
    }//GEN-LAST:event_jButtonHapusSActionPerformed

    private void jButtonHapusAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusAActionPerformed
        btnHapusA();
    }//GEN-LAST:event_jButtonHapusAActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        disableAll();
        reset();
        jComboBoxActReset();
        jComboBoxAct();
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonTambahAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahAkunActionPerformed
        tambahMenDisable();
    }//GEN-LAST:event_jButtonTambahAkunActionPerformed

    private void jButtonHapusAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusAkunActionPerformed
        hapusMenDisable();
    }//GEN-LAST:event_jButtonHapusAkunActionPerformed

    private void jButtonTambahSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahSaldoActionPerformed
        tambahSaldoMenDisable();
    }//GEN-LAST:event_jButtonTambahSaldoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditS;
    private javax.swing.JButton jButtonHapusA;
    private javax.swing.JButton jButtonHapusAkun;
    private javax.swing.JButton jButtonHapusS;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSimpanS;
    private javax.swing.JButton jButtonTambahAkun;
    private javax.swing.JButton jButtonTambahAkunA;
    private javax.swing.JButton jButtonTambahSaldo;
    private javax.swing.JComboBox<String> jComboBoxAkun;
    private javax.swing.JComboBox<String> jComboBoxAkunSaldo;
    private javax.swing.JComboBox<String> jComboBoxJenisSaldo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinnerSaldo;
    private javax.swing.JTable jTableSaldo;
    private javax.swing.JTextField jTextFieldKodeAkunA;
    private javax.swing.JTextField jTextFieldNamaAKunA;
    // End of variables declaration//GEN-END:variables
    
    private void jComboBoxAct(){
        try {
            connection = dbKonek.koneksiDB();
            String sqlQuery = "Select * FROM tbl_master_akun;";
            
            Statement statement = (Statement) connection.createStatement();
            ResultSet rs = statement.executeQuery(sqlQuery);
            while(rs.next()){
                String cmb = rs.getString(2);
                jComboBoxAkun.addItem(cmb);
                jComboBoxAkunSaldo.addItem(cmb);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "errrr");
        }
    }
    private void initTable(){
        tableModel = new DefaultTableModel();
        jTableSaldo.setModel(tableModel);
        tableModel.addColumn("Nama Akun");
        tableModel.addColumn("Debet");
        tableModel.addColumn("Kredit");
    }
    private void loadDataSaldo(){
        tableModel.getDataVector().removeAllElements(); //hapus data form
        tableModel.fireTableDataChanged(); //memberitahu bahwa data kosong (berubah)
        try {
            connection = dbKonek.koneksiDB();
            String sqlQuery = "SELECT * FROM tbl_saldo_awal;";
            Statement statement = (Statement) connection.createStatement();
            ResultSet resultSet = statement.executeQuery(sqlQuery);
            //mengisi table
            while(resultSet.next()){
                try {
                    Object[] dt_akun = new Object[3];
                    dt_akun[0] = resultSet.getString("nama_akun");
                    dt_akun[1] = resultSet.getInt("saldo_debet");
                    dt_akun[2] = resultSet.getInt("saldo_kredit");
                    tableModel.addRow(dt_akun);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "error ambil data");
                }
            }
            resultSet.close();
            statement.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error pada saat load data()");
        }
    }
    private void saveDataA(){
        String varKodeAkunA = jTextFieldKodeAkunA.getText();
        String varNamaAkunA = jTextFieldNamaAKunA.getText();
        if((varKodeAkunA.equals("")||(varNamaAkunA.equals("")))){
            JOptionPane.showMessageDialog(null, "Masih ada Form yang kosong, coba periksa");
            return;
        }
        try {
            connection = dbKonek.koneksiDB();
            String sqlQuery = "INSERT INTO tbl_master_akun (kode_akun,nama_akun) VALUES(?,?);";
            PreparedStatement preStatement = (PreparedStatement) connection.prepareStatement(sqlQuery);
            try {
                preStatement.setString(1, varKodeAkunA);
                preStatement.setString(2, varNamaAkunA);
                preStatement.executeUpdate();
//                loadDataSaldo();
                reset();
                jComboBoxActReset();
                jComboBoxAct();
                JOptionPane.showMessageDialog(null, "sukses simpan");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error pada savedataA()");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error pada saat save1 data()");
        }
    }
    private void reset(){
        jTextFieldKodeAkunA.setText("");
        jTextFieldNamaAKunA.setText("");
        jComboBoxAkun.setSelectedItem("- Pilih -");
        jComboBoxAkunSaldo.setSelectedItem("- Pilih -");
        jSpinnerSaldo.setValue(0);
        jComboBoxJenisSaldo.setSelectedItem("- Jenis -");
        loadDataSaldo();
    }
    
    
    private void saveDataS(){
        String varJenisAkunS = jComboBoxAkunSaldo.getSelectedItem().toString();
        String varSaldoS = jSpinnerSaldo.getValue().toString();
        System.out.println("swaldo : "+varJnsSaldoS);
        jCmb();
        
        if((jComboBoxAkunSaldo.getSelectedItem().equals("- Pilih -")||(jSpinnerSaldo.equals(0)))){
            JOptionPane.showMessageDialog(null, "Masih ada Form yang kosong, coba periksa");
            return;
        }
        try {
            connection = dbKonek.koneksiDB();
            String sqlQuery = "INSERT INTO tbl_saldo_awal (nama_akun,"+varJnsSaldoS+") VALUES(?,?);";
            PreparedStatement preStatement = (PreparedStatement) connection.prepareStatement(sqlQuery);
            try {
                preStatement.setString(1, varJenisAkunS);
                preStatement.setString(2, varSaldoS);
                preStatement.executeUpdate();
                loadDataSaldo();
                reset();
                JOptionPane.showMessageDialog(null, "sukses simpan");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "gagal tambah, coba periksa, munkin nama saldo sudah ada, dsb");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error pada saat save1 data()");
        }
    }
    
    private void saldoEdit(){
        int rowBaris = jTableSaldo.getSelectedRow();
        if(rowBaris == -1){
            JOptionPane.showMessageDialog(null, "Belum ada data terseleksi!");
            return;
        }
        try {
            String varJenisAkunS = jComboBoxAkunSaldo.getSelectedItem().toString();
            String varSaldoS = jSpinnerSaldo.getValue().toString();
            
            if((jComboBoxAkunSaldo.getSelectedItem().equals("- Pilih -")||(jSpinnerSaldo.equals(0)))){
                JOptionPane.showMessageDialog(null, "Masih ada Form yang kosong, coba periksa");
                return;
            }
            try {
                //hubungkan ke database
                connection = dbKonek.koneksiDB();
//                INSERT INTO tbl_saldo_awal (nama_akun,"+varJnsSaldoS+") VALUES(?,?);"
                String sqlQuery = "UPDATE tbl_saldo_awal SET nama_akun=?, "+varJnsSaldoS+"=? WHERE nama_akun=?";
                PreparedStatement preStatement = (PreparedStatement) connection.prepareStatement(sqlQuery);
                preStatement.setString(1, varJenisAkunS);
                preStatement.setString(2, varSaldoS);
                preStatement.setString(3, varJenisAkunS);
                preStatement.executeUpdate();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error di saldoEdit");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error pada saat EDIT/UPDATE data");
        }finally{
            loadDataSaldo();
        }
    }
//    private void saldoEditKosong(){
//        int rowBaris = jTableSaldo.getSelectedRow();
//        if(rowBaris == -1){
//            JOptionPane.showMessageDialog(null, "Belum ada data terseleksi!");
//            return;
//        }
//        try {
//            String varJenisAkunS = jComboBoxAkunSaldo.getSelectedItem().toString();
//            String varSaldoS = jSpinnerSaldo.getValue().toString();
//            
//            if((jComboBoxAkunSaldo.getSelectedItem().equals("- Pilih -")||(jSpinnerSaldo.equals(0)))){
//                JOptionPane.showMessageDialog(null, "Masih ada Form yang kosong, coba periksa");
//                return;
//            }
//            try {
//                //hubungkan ke database
//                connection = dbKonek.koneksiDB();
////                INSERT INTO tbl_saldo_awal (nama_akun,"+varJnsSaldoS+") VALUES(?,?);"
//                String sqlQuery = "UPDATE tbl_saldo_awal saldo_debet=0, saldo_kredit=0 WHERE nama_akun=?";
//                PreparedStatement preStatement = (PreparedStatement) connection.prepareStatement(sqlQuery);
//                preStatement.setString(1, varJenisAkunS);
//                preStatement.executeUpdate();
//            } catch (SQLException e) {
//                JOptionPane.showMessageDialog(null, "error di saldoEdit");
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "error pada saat EDIT/UPDATE data");
//        }finally{
//            loadDataSaldo();
//        }
//    }

    private void btnHapusS(){
        int rowBaris = jTableSaldo.getSelectedRow();
        if(rowBaris==-1){
            JOptionPane.showMessageDialog(null, "Gagal hapus, coba periksa lagi!\n"
                + "Pilih salah satu data pada table \nyang ingin dihapus");
            return;
        }
        String varNamaAkun = (String) tableModel.getValueAt(rowBaris, 0).toString();
        try {
            connection = dbKonek.koneksiDB();
            String sqlQuery = "DELETE FROM tbl_saldo_awal WHERE nama_akun=?";
            try {
                PreparedStatement preStatement = (PreparedStatement) connection.prepareStatement(sqlQuery);
                preStatement.setString(1, varNamaAkun);
                preStatement.executeUpdate();
                JOptionPane.showMessageDialog(null, "sukses hapus");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "menghapus error, cek btnhapus");
            }finally{
                loadDataSaldo();
                reset();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "konek error, cek btnhapus");
        }
    }
    private void btnHapusA(){
        String varNamaAkun = jComboBoxAkun.getSelectedItem().toString();
        int dialogResult = JOptionPane.showConfirmDialog(null, "Yakin hapus ?");
        if(dialogResult == JOptionPane.YES_OPTION){
            try {
                connection = dbKonek.koneksiDB();
                String sqlQuery = "DELETE FROM tbl_master_akun WHERE nama_akun=?";
                try {
                    PreparedStatement preStatement = (PreparedStatement) connection.prepareStatement(sqlQuery);
                    preStatement.setString(1, varNamaAkun);
                    preStatement.executeUpdate();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "menghapus error, cek btnhapus");
                }finally{
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "konek error, cek btnhapus");
            }
            JOptionPane.showMessageDialog(null, "sukses hapus");
            jComboBoxAkun.setSelectedItem("- Pilih -");
            return;
        }
    }
    
    private void jCmb(){
        if(jComboBoxJenisSaldo.getSelectedItem().equals("1. Debet")){
            varJnsSaldoS = "saldo_debet";
        }
        else if(jComboBoxJenisSaldo.getSelectedItem().equals("2. Kredit")){
            varJnsSaldoS = "saldo_kredit";
        }
    }
    private void tableClicked(){
        try {
            int row = jTableSaldo.getSelectedRow();
            if (row == -1){
                JOptionPane.showMessageDialog(null, "Gagal hapus, coba periksa lagi!\n"
                    + "Pilih salah satu data pada table \nyang ingin dihapus");
                return;
            }
            //mengambil data dari tabel
            String varJenisAkunS = (String) tableModel.getValueAt(row, 0);
            String varSaldoSD = (String) tableModel.getValueAt(row, 1).toString();
            int varSaldoSDCon = Integer.valueOf(varSaldoSD);
            String varSaldoSK = (String) tableModel.getValueAt(row, 2).toString();
            int varSaldoSKCon = Integer.valueOf(varSaldoSK);
            
            System.out.println("xx : "+varSaldoSD);
            jComboBoxAkunSaldo.setSelectedItem(varJenisAkunS);
            if(varSaldoSDCon > 0){
                jSpinnerSaldo.setValue(varSaldoSDCon);
                jComboBoxJenisSaldo.setSelectedItem("1. Debet");
                System.out.println("xxX : "+varSaldoSD);
            }
            else if(varSaldoSKCon > 0){
                jSpinnerSaldo.setValue(varSaldoSKCon);
                jComboBoxJenisSaldo.setSelectedItem("2. Kredit");
            }
            else{
                System.out.println("xxXxx : "+varSaldoSD);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Ambil Datamuuuuu");
        }
    }
    private void jComboBoxActReset(){
        try {
            connection = dbKonek.koneksiDB();
            String sqlQuery = "Select * FROM tbl_master_akun;";
            
            Statement statement = (Statement) connection.createStatement();
            ResultSet rs = statement.executeQuery(sqlQuery);
            while(rs.next()){
                String cmb = rs.getString(2);
                jComboBoxAkun.removeItem(cmb);
                jComboBoxAkunSaldo.removeItem(cmb);
                
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "errrr");
        }
    }
    
    
    
    
    //
    private void kasBBesar(){
        try {
        connection = dbKonek.koneksiDB();
        String sqlQuery = "SELECT saldo_debet as kasD FROM tbl_saldo_awal WHERE nama_akun='Kas';";
        com.mysql.jdbc.Statement statement = (com.mysql.jdbc.Statement) connection.createStatement();
        ResultSet resultSet = statement.executeQuery(sqlQuery);
        while(resultSet.next()){
            String kasK = resultSet.getString("kasD");
            kasKeBBesar = Integer.valueOf(kasK);
            System.out.println("ini utangK() : "+kasKeBBesar);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ekk");
        }
    }
    private void modalSahamBBesar(){
        try {
        connection = dbKonek.koneksiDB();
        String sqlQuery = "SELECT saldo_kredit as modalSahamB FROM tbl_saldo_awal WHERE nama_akun='Modal Saham';";
        Statement statement = (Statement) connection.createStatement();
        ResultSet resultSet = statement.executeQuery(sqlQuery);
        while(resultSet.next()){
            String modalSahamB = resultSet.getString("modalSahamB");
            modalSahamBB = Integer.valueOf(modalSahamB);
            System.out.println("ini modalSahamBBesar : "+modalSahamB);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ekk");
        }
    }
    private void labaDitahanBBesar(){
        try {
        connection = dbKonek.koneksiDB();
        String sqlQuery = "SELECT saldo_debet as labaDitahanB FROM tbl_saldo_awal WHERE nama_akun='Laba ditahan';";
        Statement statement = (Statement) connection.createStatement();
        ResultSet resultSet = statement.executeQuery(sqlQuery);
        while(resultSet.next()){
            String labaDitahanB = resultSet.getString("labaDitahanB");
            labaDitahanBB = Integer.valueOf(labaDitahanB);
            System.out.println("ini labaDitahan : "+labaDitahanBB);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "labaDitahanBBesar()");
        }
    }
    private void PerlengakapanBBesar(){
        try {
        connection = dbKonek.koneksiDB();
        String sqlQuery = "SELECT saldo_debet as kasD FROM tbl_saldo_awal WHERE nama_akun='Perlengkapan';";
        com.mysql.jdbc.Statement statement = (com.mysql.jdbc.Statement) connection.createStatement();
        ResultSet resultSet = statement.executeQuery(sqlQuery);
        while(resultSet.next()){
            String kasK = resultSet.getString("kasD");
            perlengakapanBB = Integer.valueOf(kasK);
            System.out.println("ini perlengakapanBB() : "+perlengakapanBB);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ekk");
        }
    }
    private void tambahMenDisable(){
        jTextFieldKodeAkunA.setEnabled(true);
        jTextFieldNamaAKunA.setEnabled(true);
        jButtonTambahAkunA.setEnabled(true);
        //
        jComboBoxAkunSaldo.setEnabled(false);
        jSpinnerSaldo.setEnabled(false);
        jComboBoxJenisSaldo.setEnabled(false);
        jButtonSimpanS.setEnabled(false);
        jButtonHapusS.setEnabled(false);
        jButtonEditS.setEnabled(false);
        jComboBoxAkun.setEnabled(false);
        jButtonHapusA.setEnabled(false);
    }
    private void hapusMenDisable(){
        jComboBoxAkun.setEnabled(true);
        jButtonHapusA.setEnabled(true);
        //
        jComboBoxAkunSaldo.setEnabled(false);
        jSpinnerSaldo.setEnabled(false);
        jComboBoxJenisSaldo.setEnabled(false);
        jButtonSimpanS.setEnabled(false);
        jButtonHapusS.setEnabled(false);
        jButtonEditS.setEnabled(false);
        jTextFieldKodeAkunA.setEnabled(false);
        jTextFieldNamaAKunA.setEnabled(false);
        jButtonTambahAkunA.setEnabled(false);
    }
    private void tambahSaldoMenDisable(){
        jComboBoxAkunSaldo.setEnabled(true);
        jSpinnerSaldo.setEnabled(true);
        jComboBoxJenisSaldo.setEnabled(true);
        jButtonSimpanS.setEnabled(true);
        jButtonHapusS.setEnabled(true);
        jButtonEditS.setEnabled(true);
        //
        jTextFieldKodeAkunA.setEnabled(false);
        jTextFieldNamaAKunA.setEnabled(false);
        jButtonTambahAkunA.setEnabled(false);
        jComboBoxAkun.setEnabled(false);
        jButtonHapusA.setEnabled(false);
    }
    private void disableAll(){
        jTextFieldKodeAkunA.setEnabled(false);
        jTextFieldNamaAKunA.setEnabled(false);
        jComboBoxAkunSaldo.setEnabled(false);
        jSpinnerSaldo.setEnabled(false);
        jComboBoxJenisSaldo.setEnabled(false);
        jButtonSimpanS.setEnabled(false);
        jButtonHapusS.setEnabled(false);
        jButtonEditS.setEnabled(false);
        jComboBoxAkun.setEnabled(false);
        jButtonHapusA.setEnabled(false);
    }
}
